pipeline {
agent {
label 'jenkins-agent'
}environment { PIPELINE_HASH = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim() HARBOR_REGISTRY = 'harbor.dev.afsmtddso.com' HARBOR_PROJECT = 'aadepegba-devsecops' APP_IMAGE_NAME = 'app' DB_IMAGE_NAME = 'db'
}
stages {
stage('Application repository') {
steps {dir('afs-labs-student') {
script{
env.APP_HASH = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
}
}
echo "Cloning application repository"
sh 'git clone https://github.com/AdebayoAdep/afs-labs-student.git '
}
}
stage('Application docker build') }
post { always { echo "Clean local $APP_IMAGE_NAME image" script { try { sh 'docker rmi $APP_IMAGE_NAME-$APP_HASH:latest' sh 'docker rmi $HARBOR_REGISTRY/$HARBOR_PROJECT/$APP_IMAGE_NAME:$APP_HASH-$PIPELINE_HASH' } catch (err) { echo err.getMessage() } } }
}post { always { echo "Clean local $DB_IMAGE_NAME image" script { try { sh 'docker rmi $DB_IMAGE_NAME-$APP_HASH:latest' sh 'docker rmi $HARBOR_REGISTRY/$HARBOR_PROJECT/$DB_IMAGE_NAME:$APP_HASH-$PIPELINE_HASH' } catch (err) { echo err.getMessage() } } }
}
stage('Database docker build') {withCredentials([usernameColonPassword(credentialsId: 'aadepegba-harbor-auth, variable: 'HARBOR-AUTH')]) { script { docker.build('$DB_IMAGE_NAME-$APP_HASH', '-f ./app/Dockerfile ./afs-labs-student') docker.withRegistry('https://$HARBOR_REGISTRY', 'aadepegba-harbor-auth') { sh 'docker tag $DB_IMAGE_NAME-$APP_HASH $HARBOR_REGISTRY/$HARBOR_PROJECT/$DB_IMAGE_NAME:$APP_HASH-$PIPELINE_HASH' sh 'docker push $HARBOR_REGISTRY/$HARBOR_PROJECT/$DB_IMAGE_NAME:$APP_HASH-$PIPELINE_HASH' } }
}

steps {
// modify to build db image and push to harbor
}
post {
// modify to clean local db image build
}
{
steps {withCredentials([usernameColonPassword(credentialsId: 'aadepegba-harbor-auth, variable: 'HARBOR-AUTH')]) { script { docker.build('$APP_IMAGE_NAME-$APP_HASH', '-f ./app/Dockerfile ./afs-labs-student') docker.withRegistry('https://$HARBOR_REGISTRY', 'aadepegba-harbor-auth') { sh 'docker tag $APP_IMAGE_NAME-$APP_HASH $HARBOR_REGISTRY/$HARBOR_PROJECT/$APP_IMAGE_NAME:$APP_HASH-$PIPELINE_HASH' sh 'docker push $HARBOR_REGISTRY/$HARBOR_PROJECT/$APP_IMAGE_NAME:$APP_HASH-$PIPELINE_HASH' } }
}
echo "Building application image"
}
}
stage('Test'){
steps {
echo "Testing stage"
}
}
stage('Deploy') {
steps {
echo "Deployment stage"
}
}
}
post {
cleanup {
echo "Clean workspace"
sh 'docker system prune -f'
sh 'rm -rf .git ./*'
}
}
}
